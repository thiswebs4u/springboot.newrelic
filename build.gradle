plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.newrelic'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	newrelic	// Custom configuration to allow for the copying of the New Relic agent at run time.

	compileOnly {
		extendsFrom annotationProcessor
	}
}

ext {
	newrelicVersion='3.5.1'
}

repositories {
	mavenLocal()
	mavenCentral()
	mavenCentral()
}

dependencies {
	newrelic "com.newrelic.agent.java:newrelic-agent:${newrelicVersion}"

//	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
//	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
//	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.register('copyAgent', Copy) {
	logger.warn "Hello ${layout.buildDirectory.get()}}"

//	println("buildDir: ${buildDir.absolutePath}")
//	println("buildFile: ${buildFile.absolutePath}")
//	println("projectDir: ${projectDir.absolutePath}")
//	println("rootDir: ${rootDir.absolutePath}")
//	println("Build Directory: ${layout.buildDirectory.get()}")
//	println("Project Directory: ${project.layout.projectDirectory}")
//	println("ProjectDirectory: ${layout.projectDirectory}")

	from {
		configurations.newrelic
	}
	into "${layout.buildDirectory.get()}/libs"
	rename("newrelic-agent-${newrelicVersion}.jar", 'newrelic.jar')
}

springBoot {
	mainClass = 'com.newrelic.demo.DemoApplication'
	//agent = file("$buildDir/lib/newrelic.jar")
}

project.tasks.bootRun.dependsOn([copyAgent])